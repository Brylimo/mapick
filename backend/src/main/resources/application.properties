spring.application.name=EnjoyTrip_Framework

logging.level.com.ssafy=trace

#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp

# Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.template-resolver-order=1

# Email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=juneberry.diary
spring.mail.password=svmm mbku byki ekfx
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

spring.security.oauth2.client.registration.kakao.client-id=a2af3dfe9baa32baa872fb38918a1a9b
spring.security.oauth2.client.registration.kakao.client-secret=ogH88sqKCqLYUePNoybR7QituDbWZm3S
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email

# database
spring.datasource.url=jdbc:mysql://localhost:3306/ssafytrip?serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=ssafy
spring.datasource.password=ssafy
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.idle-timeout=300000

mybatis.mapper-locations=classpath:/mappers/**/*.xml
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis.type-aliases-package=com.enjoytrip.model.dto,com.enjoytrip.domain,com.enjoytrip.dto

tour.api.url=http://apis.data.go.kr/B551011/KorService1
tour.api.key=0NjtB9VFeDB6IXK8f4%2BnWmnR1HoiR1ut7H8F7ZMFi6TwRUTrIvhleE%2BbAIDl0cQgaWr183RRIQcDXdhnurTyGw%3D%3D

# S3/R2
aws.s3.public-url=https://pub-37417aab5929457ea5cc39140044b826.r2.dev
aws.s3.endpoint-url=https://893ddb890911cb604dfcb67dbb99057c.r2.cloudflarestorage.com
aws.s3.bucket=mapick
aws.s3.region=auto
aws.access-key=8bb13c4b4654364b73345f1b5dbbce28
aws.secret-key=4943aa2a26fb9f80f059bf89a84442d0586eb26dc610b89fbd16c3f0d569d10d
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.use_sql_comments=true
spring.jpa.show-sql=true

# REDIS
spring.data.redis.port=6379
spring.data.redis.host=localhost

app.front.url: http://localhost:5173
app.cookie.secure: false
app.cookie.sameSite: None
app.jwt.secret: jA+YxXxRUvN+uE0V3zYmWg4kaSFO5XT+ANeOE93Eeb7Inw9BQ4QLQZgqZjC/qEygdz9WejAjNs80zyPvjh+7tA==

spring.ai.openai.api-key=aaa
# \u00EC\u0082\u00AC\u00EC\u009A\u00A9\u00ED\u0095\u00A0 OpenAI chat model\u00EC\u009D\u0098 \u00EC\u009D\u00B4\u00EB\u00A6\u0084
spring.ai.openai.chat.options.model=gpt-4o
# \u00EC\u00B0\u00BD\u00EC\u009D\u0098\u00EC\u0084\u00B1\u00EC\u009D\u0084 \u00EC\u00A0\u009C\u00EC\u0096\u00B4\u00ED\u0095\u0098\u00EB\u008A\u0094\u00EB\u008D\u00B0 \u00EC\u0082\u00AC\u00EC\u009A\u00A9\u00EB\u0090\u0098\u00EB\u008A\u0094 \u00EC\u0083\u0098\u00ED\u0094\u008C\u00EB\u00A7\u0081 \u00EC\u0098\u00A8\u00EB\u008F\u0084: \u00EB\u0086\u0092\u00EC\u009D\u0084 \u00EC\u0088\u0098\u00EB\u00A1\u009D \u00EC\u00B0\u00BD\u00EC\u009D\u0098\u00EC\u0084\u00B1\u00EC\u009D\u00B4 \u00EB\u0086\u0092\u00EC\u0095\u0084\u00EC\u00A7\u0090 - \u00EB\u00BB\u0098\u00EC\u0086\u008C\u00EB\u00A6\u00AC\u00ED\u0095\u00A0 \u00ED\u0099\u0095\u00EC\u009C\u00A8\u00EB\u008F\u0084.. (0~2)
spring.ai.openai.chat.options.temperature=0.7
# \u00EC\u00B6\u009C\u00EB\u00A0\u00A5\u00EA\u00B3\u00BC \u00EC\u00B6\u0094\u00EB\u00A1\u00A0\u00EC\u0097\u0090 \u00EC\u0082\u00AC\u00EC\u009A\u00A9\u00EB\u0090\u0098\u00EB\u008A\u0094 \u00ED\u0086\u00A0\u00ED\u0081\u00B0 \u00EC\u0088\u0098\u00EC\u009D\u0098 \u00EC\u0083\u0081\u00ED\u0095\u009C\u00EC\u0084\u00A0
spring.ai.openai.chat.options.maxCompletionTokens=10000

# redis \u00EC\u0084\u009C\u00EB\u00B2\u0084 URL
#spring.ai.vectorstore.redis.uri=redis://localhost:6379
# schema \u00EC\u00B4\u0088\u00EA\u00B8\u00B0\u00ED\u0099\u0094 \u00EC\u0097\u00AC\u00EB\u00B6\u0080
spring.ai.vectorstore.redis.initialize-schema=false
# application.properties
spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.vectorstore.redis.RedisVectorStoreAutoConfiguration
# \u00EC\u009D\u00B8\u00EB\u008D\u00B1\u00EC\u008A\u00A4 \u00EC\u009D\u00B4\u00EB\u00A6\u0084
spring.ai.vectorstore.redis.index=ssafy-index
# \u00EC\u00A0\u0091\u00EB\u0091\u0090\u00EC\u0082\u00AC
spring.ai.vectorstore.redis.prefix=ssafy:
# system prompt
ssafy.ai.system-prompt=You are a friendly and knowledgeable travel assistant. Always respond in {language} using a {character} tone. When making travel recommendations, follow this exact format: - Use a numbered list (e.g., 1., 2., 3.) - Bold each place name using Markdown (e.g., **Bulguksa**) and write the description on the same line after a dash or colon - Do not add extra line breaks between the title and description - At the end, include 1-2 helpful local tips like food or timing - Do not combine all items into a single paragraph - Prioritize clean formatting and readability at all times.

ssafy.ai.rag-prompt=Below is contextual travel information, surrounded by: \
--------------------- \
{question_answer_context} \
--------------------- \
Using this context: \
- Suggest travel destinations, activities, or points of interest that match the user's preferences. \
- If the information isn't directly available in the context, say: "I couldn't find any matching destinations in my data." Then, provide a helpful general suggestion. \
- Always consider user preferences like location, theme (e.g., nature, history, food), or travel companions when making recommendations.

